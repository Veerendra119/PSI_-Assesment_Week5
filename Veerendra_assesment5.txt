1)
Create table Student_Replica as Select * from Student;

2)
Create table Student_Replica as Select * from Student where 1=2;

3)
FOR Last 10 records from Student table

Select * from Student S where rownum <=10
union
select * from (Select * from Student S order by rowid desc) where rownum <=10;

FOR minimum salary and maximum salary of Employee together from Employee table.

SELECT MAX(salary),MIN(salary) FROM employees;

4)
user_transaction template = '''
select
user_id
, count(*) as num transactions
, sum(amount) as total amount
from
 transactions
where
 user_id = 1234
and transaction_date = '2022-03-02'
group by
user_id

params = {
*user id': 1234,
"transaction date': '2022-03-02'
}

j=JinjaSq1(param_style='pyformat')
query,bind_params=j.prepare_query(user_transaction_template, params)

print(query)


5)
Select * from Students where name like ‘P%’ and surname like ‘S%’;

6)
Select * from Student where rowid = select max(rowid) from Student;

7)
WITH cte_sales AS (
    SELECT 
        staff_id, 
        COUNT(*) order_count  
    FROM
        sales.orders
    WHERE 
        YEAR(order_date) = 2018
    GROUP BY
        staff_id

)
SELECT
    AVG(order_count) average_orders_by_staff
FROM 
    cte_sales;


8)
create trigger update_after
       after update on customer
       for each row
       begin
       insert into micro_statement values(new.acc_no, new.avail_balance);
       end; 

create trigger contacts_before_insert
            before insert
            on contacts for each row
            begin
            DECLARE vUser varchar(50);
            select USER() into vUser;
            SET NEW.created_date = SYSDATE();
            SET NEW.created_by = vUser;
            end;